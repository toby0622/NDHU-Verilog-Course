module UBetterWorkHardOnThis(sw1,seg1,sw2,seg2);
	input[3:0] sw1,sw2;
	output[6:0] seg1,seg2;
	
	flunk dec1(sw1,seg1);
	flunk dec2(sw2,seg2);
	
endmodule

module flunk(V,outseg);
	input	[3:0]	V;
	output reg	[6:0] outseg;
	
	always @(V)
	begin
		case(V)
			4'b0000: outseg = 7'b1000000;		//	[6:0] -> gfedcba
			4'b0001:	outseg = 7'b1111001;	
			4'b0010:	outseg = 7'b0100100;	
			4'b0011:	outseg = 7'b0110000;	
			4'b0100:	outseg = 7'b0011001;	
			4'b0101:	outseg = 7'b0010010;	
			4'b0110:	outseg = 7'b0000010;	
			4'b0111:	outseg = 7'b1111000;	
			4'b1000:	outseg = 7'b0000000;	
			4'b1001:	outseg = 7'b0011000;	
			4'b1010:	outseg = 7'b0001000;	
			4'b1011:	outseg = 7'b0000011;	
			4'b1100:	outseg = 7'b1000110;	
			4'b1101:	outseg = 7'b0100001;	
			4'b1110:	outseg = 7'b0000110;	
			4'b1111:	outseg = 7'b0001110;	
	default:	outseg = 7'b1000000;	
	endcase
	end
endmodule 
